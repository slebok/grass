Shotgun: a chunk of input could be parsed in more detail

[emph]Shotgun parsing[/emph] is a term used in cybersecurity to represent an
architecture where a proper parser is substituted with lightweight treatment
(by regular expression matches and direct string manipulation)
[cite]Shotgun12[/cite]. The name comes from the fact that in a pipeline of
tools built with such defects, the problems quickly multiply with each step
when the receiver is applying Postel's Law in trying to be relaxed with its
input [cite]Sassaman2012[/cite], and is known to cause all kinds of subtle
bugs in software language processing [cite]Flexible2015[/cite]. We define the
Shotgun smell as a situation when the grammatical bind is too loose on one of
its ends. For example, imagine function arguments in a C-like language to be
parsed as a parenthesis-enclosing string which is expected to be split into a
proper list by the code that uses the resulting tree. This smell was not seen
within grammars of the Grammar Zoo, but was observed in the industrial setting
when time pressure got the best of grammar engineers.

Related: MA|Missing Abstraction
Related: MAC2|Missing Abstraction
