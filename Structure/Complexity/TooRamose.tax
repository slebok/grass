TooRamose: too much branching

McCabe's cyclomatic complexity has received a lot of critique over the years,
but nevertheless is present in many code analysis tools either directly or
conceptually through improvements like
cognitive complexity [cite]IWPC-2003-RillingK[/cite] or
control flow patterns [cite]SCAM-2012-VinjuG[/cite].
In grammars cyclomatic complexity is easy to estimate if we think of the
parsing semantics, and it will be rather close for any other concrete
application of the grammar. Alternatives and all kinds of disjunction
obviously contribute to its increase, as well as repetition metasymbols.
Conjunction, if present, also contributes to the branching since a construct
like [code]A & B[/code] means that both the parser and the grammar engineer
will have to explore both branches related to [code]A[/code] as well as to
[code]B[/code].

It is interesting to consider how this smell can be eliminated: a similar
``Wide Hierarchy'' code smell suggests to introduce intermediate hubs for
groups of nonterminals, but others blame such a solution from other points of
view because there is a chance of those nonterminals to be
[smell]Weak[/smell].


Related: WH|Wide Hierarchy
Related: DCT|Clone Tables
Related: SCC|Conditional Complexity
Related: BM|Broken Modularization
