Rivalry: overlapping alternatives

Traditionally grammar notations advertised to have a sequence combinator and a
choice combinator as the ways to compose complex expressions from atomic
symbols (terminals and nonterminals) [cite]BNF[/cite]. Modern frameworks are
more advanced and versatile, they feature several kinds of negation,
conjunction, ordered choices, precede and follow restrictions, etc. However,
there is none that explicitly provides an exclusive disjunction combinator
[cite]SAC-2012-Zaytsev[/cite], even though it was the original intent behind
the choice: thus, a statement may be a conditional statement or a print
statement, but not both at the same time. There is an entire research domain
dedicated to [emph]disambiguation[/emph] of grammars---that is, detecting when
something intended as an exclusive choice, leads to several successful parses,
only one of which must remain in the final tree [cite]POPL-1973-AhoJU[/cite].
This smell is about such situations: it occurs whenever languages of
alternative siblings overlap and create an ambiguity. Ambiguity detection and
removal techniques can be powerful but not perfect, and the general case is
undecidable because it requires decidability of language equivalence.

% AS because it can be a result of parallelisation (???) and ACDI because it can parse the same thing differently

Related: AS|Autogenerated Stovepipe
Related: ACDI|Alternative Classes with Different Interfaces
Related: ERC|Repeated Conditionals
